
** SEE TEST MODEL NOTES AT BOTTOM OF THIS DOCUMENT **


How to use Display Stream Compression (DSC) algorithm model
--------------------------------------------------------------

1)  The typical usage for the DSC model is:

DSC -F <configuration_file>

The configuration_file contains a list of options for the model.  An example is given in test.cfg that is included with the model.  The parameters are listed in the section below.


2)  The configuration file can specify whether the DSC executable behaves as an encoder, decoder, or both using the FUNCTION parameter.  If the FUNCTION is 1, the executable will encode to an output bitstream that is stored in a file (or files) with the same base name and a .dsc extension.  If the FUNCTION is set to 2, the executable will decode a .dsc file (or files) specified.  If .dpx or .ppm files are listed in the input list file instead of .dsc files, the .dsc files will be decoded and PSNR will be calculated as well.  If the FUNCTION is 0, the executable will encode and decode, but no bitstream file will be generated.

A list file (SRC_LIST) is required to indicate which source files to encode.  The list file is also required in decode mode to indicate which .dsc files to decode.  The list file may contain full pathnames.  By default, the model outputs to the current working directory; however, an alternative OUT_DIR can be specified in the config file.  If the same list file is used for encoding and decoding, the PSNR will be calculated between the source file and decoded output.

Parameters besides SRC_LIST and FUNCTION are ignored for the decoder, since the configuration is stored as part of the bitstream file.


3)  Output files to the current working directory:
	- log.txt (or filename specified as LOG_FILENAME) provides PSNR information
	- <name>.ref.dpx is the converted DPX file that represents the encoder input
	- <name>.out.dpx is the decoder output
        - <name>.dsc is the output bitstream if FUNCTION = 1


4)  The included EXE file is compiled under Win32, and some users may experience memory allocation errors for very large pictures.  Compiling the code using "x64" platform target under Windows or compiling under 64-bit Linux will fix these errors.



Configuration file paramters
-----------------------------

FUNCTION - 0=encode and decode (no bitstream file is produced), 1=encode only, 2=decode only

BITS_PER_PIXEL - The constant bit rate of the output stream (bits/pixel).  Can be specified as a floating point number.

BITS_PER_COMPONENT - The input DPX files will be converted to this number of bits per component if they aren't already in that format and coded using this value for bpc.

SIMPLE_422 - If set to 1, USE_YUV_INPUT must be set 1.  The input DPX files will be converted to YCbCr 4:2:2 (if they aren't already in that format) and coded that way.  If set to 0, the input DPX files will be converted and coded as 4:4:4.

VBR_ENABLE - Enable VBR mode.

USE_YUV_INPUT - If set 0, the input DPX files will be converted to RGB (if they aren't already in that format) and coded that way.  If set to 1, the input DPX files will be converted to YCbCr (if the aren't already in that format) and coded that way.

SLICE_WIDTH - If specified, sets the width of the rectangular slices.  If unspecified, slices are assumed to be the full picture width.

SLICE_HEIGHT - If specified, sets the height of the rectangular slices.  If unspecified, slices are assumed to be the full picture height.

SWAP_R_AND_B - Allows the swapping of the R & B components of the input files if the DPX file input has incorrect component ordering.

SWAP_R_AND_B_OUT - Allows the swapping of the R & B components of the output files if the DPX viewer has incorrect component ordering.

DPX_BUGS_OVERRIDE - If noncompliant DPX files are input, allows the DPX reader to read them properly.  This is required to be set = 2 for the Sharp images that were generated by ImageMagick.

DPX_READ_NOSWAP - Ignore magic number and don't byte-swap image data for DPX reading

DPX_WRITE_BSWAP - Write the DPX file endianness the opposite way from the host machine.

SRC_LIST - Specifies a text file that contains the DPX files to be processed (one file name per line).

INCLUDE - Several different include files are used for different rate control settings.  The distribution has recommended settings for 8, 10, and 12 bpc and 8 and 12 bpp.

BLOCK_PRED_ENABLE - Enables block prediction with a range of 8 positions.  A value of 0 disables block prediction.  Block prediction helps certain pathological images but can have a slight negative effect on "typical" content.

YUV_FILE_OUTPUT - Set to 1 to output .YUV files in 4:2:0 or 4:2:2 mode (output is only generated if it matches the coding pixel format)

DPX_FILE_OUTPUT (default 1) - Set to 0 to disable DPX file output

PPM_FILE_OUTPUT - Set to 1 to output PPM files

YUV_FILE_FORMAT - 0 = YUV files are planar 4:2:0; 1 = YUV files are packed (UYVY) 4:2:2




DPX Support Notes
------------------
The model supports reading and writing 8, 10, 12, and 16-bit DPX files.  We attempted to follow the SMPTE 268M specification as closely as possible.  Although some testing has been done to try to ensure compatibility, there may be some issues reading certain types of DPX files.  The written DPX files aren't guaranteed to work with any specific DPX reader software.

1)  See the included DPX application note for information on the DPX standard and compatibility as well as the config file options for DPX.

2)  We always output a .ref.dpx file that contains the image the codec is trying to code.  If your reader doesn't read this file, it won't be able to read the .out.dpx file either.  If you know your DPX reader ordinarily works with the .ref.dpx file, but some particular source image causes problems, there may be a compatibility issue between that source image and the DPX reader.

3)  The model can also input and output PPM format. Set PPM_FILE_OUTPUT to 1 to output PPM files.



The following features are added to DSC 1.2:
--------------------------------------------

-  Support for YUV 4:2:0 input/output .YUV files (only single frames currently supported).  Files with >8 BPC use 16-bit LE packing.
-  Support for native 420 and native 422 modes (set NATIVE_420 or NATIVE_422 equal to 1 in the config file).  Note that USE_YUV_INPUT is required to be 1 and SIMPLE_422 is required to be 0 for these modes.
-  Support for 14 & 16 bpc
-  Some minor modifications for flatness, rate control.

Brief description of parameters:

- SECOND_LINE_BPG_OFFSET - Specifies BPG offset for 2nd line (used in 4:2:0 mode)

- SECOND_LINE_OFFSET_ADJ - Specifies a portion of the initial offset to use for the 2nd line (used in 4:2:0 mode)

- DSC_VERSION_MINOR (default 2) - Set minor version to 1 to generate a DSC 1.1 compliant output.

- PIC_WIDTH, PIC_HEIGHT - Picture width & height for YUV input



The following features are added to DSC 1.2a:
---------------------------------------------

- FULL_ICH_ERR_PRECISION - 0 = truncate errors in encoder ICH decision, 1 = use full precision for errors in encoder ICH decision

- Note that Native 4:2:0 was not correctly supported in DSC 1.2 and was deprecated; the DSC 1.2a model provides a corrected implementation for Native 4:2:0.
